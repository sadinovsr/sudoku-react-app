import { sudokuChecker } from '../../helpers/SudokuChecker';

describe('sudokuChecker()', () => {
  it('should return true as sudoku is correct', () => {
    const object = {
      A1: '5', A2: '1', A3: '9', A4: '3', A5: '8', A6: '6', A7: '2', A8: '7', A9: '4', 
      B1: '7', B2: '3', B3: '4', B4: '9', B5: '5', B6: '2', B7: '8', B8: '6', B9: '1', 
      C1: '8', C2: '2', C3: '6', C4: '4', C5: '1', C6: '7', C7: '9', C8: '3', C9: '5', 
      D1: '6', D2: '9', D3: '7', D4: '1', D5: '4', D6: '8', D7: '5', D8: '2', D9: '3', 
      E1: '3', E2: '5', E3: '8', E4: '2', E5: '6', E6: '9', E7: '1', E8: '4', E9: '7', 
      F1: '2', F2: '4', F3: '1', F4: '5', F5: '7', F6: '3', F7: '6', F8: '8', F9: '9', 
      G1: '9', G2: '7', G3: '3', G4: '6', G5: '2', G6: '1', G7: '4', G8: '5', G9: '8', 
      H1: '1', H2: '6', H3: '5', H4: '8', H5: '3', H6: '4', H7: '7', H8: '9', H9: '2', 
      I1: '4', I2: '8', I3: '2', I4: '7', I5: '9', I6: '5', I7: '3', I8: '1', I9: '6', 
    }
    expect(sudokuChecker(object, false)).toBe(true);
  });
  it('should return false as column has duplicates', () => {
    const object = {
      A1: '1', A2: '5', A3: '9', A4: '3', A5: '8', A6: '6', A7: '2', A8: '7', A9: '4', 
      B1: '7', B2: '3', B3: '4', B4: '9', B5: '5', B6: '2', B7: '8', B8: '6', B9: '1', 
      C1: '8', C2: '2', C3: '6', C4: '4', C5: '1', C6: '7', C7: '9', C8: '3', C9: '5', 
      D1: '6', D2: '9', D3: '7', D4: '1', D5: '4', D6: '8', D7: '5', D8: '2', D9: '3', 
      E1: '3', E2: '5', E3: '8', E4: '2', E5: '6', E6: '9', E7: '1', E8: '4', E9: '7', 
      F1: '2', F2: '4', F3: '1', F4: '5', F5: '7', F6: '3', F7: '6', F8: '8', F9: '9', 
      G1: '9', G2: '7', G3: '3', G4: '6', G5: '2', G6: '1', G7: '4', G8: '5', G9: '8', 
      H1: '1', H2: '6', H3: '5', H4: '8', H5: '3', H6: '4', H7: '7', H8: '9', H9: '2', 
      I1: '4', I2: '8', I3: '2', I4: '7', I5: '9', I6: '5', I7: '3', I8: '1', I9: '6', 
    }
    expect(sudokuChecker(object, false)).toBe(false);
  });
  it('should return false as row has duplicates', () => {
    const object = {
      A1: '5', A2: '1', A3: '4', A4: '3', A5: '8', A6: '6', A7: '2', A8: '7', A9: '4', 
      B1: '7', B2: '3', B3: '9', B4: '9', B5: '5', B6: '2', B7: '8', B8: '6', B9: '1', 
      C1: '8', C2: '2', C3: '6', C4: '4', C5: '1', C6: '7', C7: '9', C8: '3', C9: '5', 
      D1: '6', D2: '9', D3: '7', D4: '1', D5: '4', D6: '8', D7: '5', D8: '2', D9: '3', 
      E1: '3', E2: '5', E3: '8', E4: '2', E5: '6', E6: '9', E7: '1', E8: '4', E9: '7', 
      F1: '2', F2: '4', F3: '1', F4: '5', F5: '7', F6: '3', F7: '6', F8: '8', F9: '9', 
      G1: '9', G2: '7', G3: '3', G4: '6', G5: '2', G6: '1', G7: '4', G8: '5', G9: '8', 
      H1: '1', H2: '6', H3: '5', H4: '8', H5: '3', H6: '4', H7: '7', H8: '9', H9: '2', 
      I1: '4', I2: '8', I3: '2', I4: '7', I5: '9', I6: '5', I7: '3', I8: '1', I9: '6', 
    }
    expect(sudokuChecker(object, false)).toBe(false);
  });
  it('should return true as object is empty and is fromAdd', () => {
    const object = {
      A1: '1', A2: '', A3: '', A4: '', A5: '', A6: '', A7: '', A8: '', A9: '', 
      B1: '', B2: '', B3: '1', B4: '', B5: '', B6: '', B7: '', B8: '', B9: '', 
      C1: '', C2: '', C3: '', C4: '', C5: '', C6: '', C7: '', C8: '', C9: '', 
      D1: '', D2: '', D3: '', D4: '', D5: '', D6: '', D7: '', D8: '', D9: '', 
      E1: '', E2: '', E3: '', E4: '', E5: '', E6: '', E7: '', E8: '', E9: '', 
      F1: '', F2: '', F3: '', F4: '', F5: '', F6: '', F7: '', F8: '', F9: '', 
      G1: '', G2: '', G3: '', G4: '', G5: '', G6: '', G7: '', G8: '', G9: '', 
      H1: '', H2: '', H3: '', H4: '', H5: '', H6: '', H7: '', H8: '', H9: '', 
      I1: '', I2: '', I3: '', I4: '', I5: '', I6: '', I7: '', I8: '', I9: '', 
    }
    expect(sudokuChecker(object, true)).toBe(false);
  });
  it('should return false as object is empty and is not fromAdd', () => {
    const object = {
      A1: '', A2: '', A3: '', A4: '', A5: '', A6: '', A7: '', A8: '', A9: '', 
      B1: '', B2: '', B3: '', B4: '', B5: '', B6: '', B7: '', B8: '', B9: '', 
      C1: '', C2: '', C3: '', C4: '', C5: '', C6: '', C7: '', C8: '', C9: '', 
      D1: '', D2: '', D3: '', D4: '', D5: '', D6: '', D7: '', D8: '', D9: '', 
      E1: '', E2: '', E3: '', E4: '', E5: '', E6: '', E7: '', E8: '', E9: '', 
      F1: '', F2: '', F3: '', F4: '', F5: '', F6: '', F7: '', F8: '', F9: '', 
      G1: '', G2: '', G3: '', G4: '', G5: '', G6: '', G7: '', G8: '', G9: '', 
      H1: '', H2: '', H3: '', H4: '', H5: '', H6: '', H7: '', H8: '', H9: '', 
      I1: '', I2: '', I3: '', I4: '', I5: '', I6: '', I7: '', I8: '', I9: '', 
    }
    expect(sudokuChecker(object, false)).toBe(false);
  });
  it('should return true as object is empty and is fromAdd', () => {
    const object = {
      A1: '', A2: '', A3: '', A4: '', A5: '', A6: '', A7: '', A8: '', A9: '', 
      B1: '', B2: '', B3: '', B4: '', B5: '', B6: '', B7: '', B8: '', B9: '', 
      C1: '', C2: '', C3: '', C4: '', C5: '', C6: '', C7: '', C8: '', C9: '', 
      D1: '', D2: '', D3: '', D4: '', D5: '', D6: '', D7: '', D8: '', D9: '', 
      E1: '', E2: '', E3: '', E4: '', E5: '', E6: '', E7: '', E8: '', E9: '', 
      F1: '', F2: '', F3: '', F4: '', F5: '', F6: '', F7: '', F8: '', F9: '', 
      G1: '', G2: '', G3: '', G4: '', G5: '', G6: '', G7: '', G8: '', G9: '', 
      H1: '', H2: '', H3: '', H4: '', H5: '', H6: '', H7: '', H8: '', H9: '', 
      I1: '', I2: '', I3: '', I4: '', I5: '', I6: '', I7: '', I8: '', I9: '', 
    }
    expect(sudokuChecker(object, true)).toBe(true);
  });
})